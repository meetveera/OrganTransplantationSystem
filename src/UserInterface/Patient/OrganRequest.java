/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Patient;

import Business.EcoSystem;
import Business.Email.Email;
import Business.Enterprise.Enterprise;
import Business.Enterprise.TCEnterprise;
import Business.Network.Network;
import Business.Organizations.AdminOrganization;
import Business.Organizations.DoctorOrganization;
import Business.Organizations.DonorOrganization;
import Business.Organizations.InsuranceAgent;
import Business.Organizations.Organizations;
import static Business.Organizations.Organizations.Type.InsuranceAgent;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientCostWorkRequest;
import Business.WorkQueue.PatientOrganWorkRequest;
import Business.WorkQueue.PatientRequestsInsuranceCompany;
import Business.WorkQueue.WorkRequest;
import UserInterface.Doctor.WorkAreaForDoctor;
import java.awt.CardLayout;
import java.io.File;
import java.util.List;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author meetveera
 */
public class OrganRequest extends javax.swing.JPanel {

    /**
     * Creates new form OrganRequest
     */
    private JPanel RightPanel;
    private EcoSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    public OrganRequest(JPanel RightPanel, UserAccount account, Enterprise enterprise,EcoSystem system)
   {
        initComponents();
        this.RightPanel = RightPanel;
        this.account = account;
        this.system = system;
        this.enterprise = enterprise;
        
    //    SubmitRequest.setEnabled(false);
        populatePRequestTable();
        populateLocationCombo();
        
   }   
    
    
    public void populateLocationCombo(){
        for (Network network : system.getNetworkList()) {
            LocationComboBox.addItem(network);
        }
    }
    
    public void populateEnterpriseComboBox(Network network){
        TCCombobox.removeAllItems();
        for(Enterprise e: network.getEp().getEnterpriselist()){
            //if(!e.getOrganizationdir().getOrganizationList().isEmpty())
            if(e instanceof TCEnterprise)
                TCCombobox.addItem(e);
        }
    }
    public void populatePRequestTable(){
        DefaultTableModel model = (DefaultTableModel) PatientworkRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((PatientOrganWorkRequest) request).getOrgan();
            row[3] = result == null ? "Waiting" : result; 
            model.addRow(row);
        }
    }
    
  //  public void populateComboBox(Enterprise enterprise){
  //      TCComboBox.removeAllItems();
  //  for(Enterprise e: enterprise.getEnterpriseDir().getEnterpriselist())
  //      TCComboBox.addItem(e);
   // }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Organ = new javax.swing.JComboBox<>();
        SubmitRequest = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PatientworkRequestJTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        LocationComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        TCCombobox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        DeseaseName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        DeseaseTime = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Severity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TreatmentDetails = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 51, 51));
        setForeground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("WELCOME");

        jLabel3.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Please fill out the below form and upload all the related documents to initial transplantation request");

        jLabel4.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("REQUIRED ORGAN:");

        Organ.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        Organ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Kidney", "Lungs", "Liver", "Intestine", "Heart", "Pancrease" }));

        SubmitRequest.setBackground(new java.awt.Color(0, 153, 153));
        SubmitRequest.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        SubmitRequest.setForeground(new java.awt.Color(255, 255, 255));
        SubmitRequest.setText("SUBMIT");
        SubmitRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitRequestActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(0, 153, 153));
        Back.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("<<BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        PatientworkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PatientworkRequestJTable);

        jLabel5.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("LOCATION :");

        LocationComboBox.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        LocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("TRANSPLANTATION CENTER :");

        TCCombobox.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        TCCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCComboboxActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CLICK THE BUTTON TO ESTIMATE THE COST OF TREATMENT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("DISEASE NAME :");

        DeseaseName.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DISEASE DURATION :");

        DeseaseTime.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        DeseaseTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeseaseTimeActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SEVERITY :");

        Severity.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("TREATMENT DETAILS :");

        TreatmentDetails.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10))
                                .addGap(115, 115, 115)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Severity, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                                    .addComponent(DeseaseTime, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DeseaseName)
                                    .addComponent(TreatmentDetails)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SubmitRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Organ, 0, 318, Short.MAX_VALUE)
                                    .addComponent(LocationComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(TCCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(139, 139, 139))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Organ, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(TCCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeseaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeseaseTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Severity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TreatmentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(279, 279, 279))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitRequestActionPerformed
        // TODO add your handling code here:
        if(((String)Organ.getSelectedItem()).equalsIgnoreCase("--Select--"))
        {
            JOptionPane.showMessageDialog(null,"Please select the organ you want");
            return;
        }
        else if(DeseaseName.getText().equals("") ||
                DeseaseTime.getText().equals("") ||
                Severity.getText().equals("") ||
                TreatmentDetails.getText().equals("")){
                        JOptionPane.showMessageDialog(null,"Please fill all you medical details!!");
                        return;
        }
        else{

            String message = (String)Organ.getSelectedItem();
            String DeseaseName = this.DeseaseName.getText();
            String DeseaseTime = this.DeseaseTime.getText();
            String Sev =  Severity.getText();
            String treatmentDetails = TreatmentDetails.getText();
            PatientOrganWorkRequest request = new PatientOrganWorkRequest();
            request.setMessage(message);
            request.setSender(account);
            request.setStatus("Sent"); 
            request.setRole("patient");
            request.setDesease(DeseaseName);
            request.setDeseasetime(DeseaseTime);
            request.setComplexity(Sev);
            request.setTeatmentdetails(treatmentDetails);
        Organizations org = null;
        for(Network network: system.getNetworkList())
         {
             for(Enterprise enterprise: network.getEp().getEnterpriselist())
             {
                for (Organizations organization : enterprise.getOrganizationdir().getOrganizationList()){
                    if(network.equals(LocationComboBox.getSelectedItem())){
                        if(enterprise.equals(TCCombobox.getSelectedItem())){
                            if (organization instanceof DoctorOrganization){
                                org = organization;
                                break;
                            }
                        }
                     }
                 }
           }
        }
        if (org!=null)
        {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null,"Your request has been initiated");
            populatePRequestTable();
            try{
            Email emailConfig= new Email();
            Properties smtpProperties = emailConfig.loadProperties();
            String email = account.getUsername();
            emailConfig.sendEmail(smtpProperties, email, "Request Initiated", "Your request has being sent to the Transplantation center");
        }
            catch(Exception ex){
                
            }
        }
        if(org==null)
        {
            JOptionPane.showMessageDialog(null,"There was no Doctors Organization in the Transplantation Center  you have Selected !");
            return;
        }
            
        }
        
    }//GEN-LAST:event_SubmitRequestActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        RightPanel.remove(this);
        CardLayout layout = (CardLayout)RightPanel.getLayout();
        layout.previous(RightPanel);
    }//GEN-LAST:event_BackActionPerformed

    private void LocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationComboBoxActionPerformed
        // TODO add your handling code here:
        Network network =(Network)LocationComboBox.getSelectedItem();
        
        if (network != null){
            populateEnterpriseComboBox(network);}
    }//GEN-LAST:event_LocationComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CostRequest cr = new CostRequest(RightPanel, account, enterprise, system,(Network)LocationComboBox.getSelectedItem(),(Enterprise)TCCombobox.getSelectedItem());
        CardLayout layout=(CardLayout)RightPanel.getLayout();
        RightPanel.add(cr);
        layout.next(RightPanel);
       /* Organizations org=null;
        for(Network network:system.getNetworkList()){
            for(Enterprise e:network.getEp().getEnterpriselist()){
                for(Organizations o:e.getOrganizationdir().getOrganizationList()){
                     if(network.equals(LocationComboBox.getSelectedItem())){
                        if(enterprise.equals(TCCombobox.getSelectedItem())){
                            if (o instanceof DoctorOrganization){
                                org = o;
                                break;
                    
                }
            }
                
        }
                }
            }
        }
        if(org !=null){
            PatientCostWorkRequest request= new PatientCostWorkRequest();
            request.setSender(account);
            request.setMessage("whats the cost ?");
            request.setStatus("Sent");
            org.getCostEstimation().getWorkRequestList().add(request);
            account.getCq().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null,"cost estimation sent !");
        }*/
        /*Organizations org =null;
        for(Network network :system.getNetworkList()){
            for(Enterprise e:network.getEp().getEnterpriselist()){
                for(Organizations o:e.getOrganizationdir().getOrganizationList()){
                    if(network.equals(LocationComboBox.getSelectedItem())){
                        if(e.equals(TCCombobox.getSelectedItem())){
                            if(o instanceof DoctorOrganization)
                                org=o;
                            break;
                        }
                    }
                }
            }
        }
        if(org !=null){
            PatientCostWorkRequest request= new PatientCostWorkRequest();
            request.setSender(account);
            request.setMessage("whats the cost ?");
            request.setStatus("Sent");
            org.getCostEstimation().getWorkRequestList().add(request);
            account.getCq().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null,"cost estimation sent !");
            populateTF();
        }*/
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void DeseaseTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeseaseTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeseaseTimeActionPerformed

    private void TCComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TCComboboxActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextField DeseaseName;
    private javax.swing.JTextField DeseaseTime;
    private javax.swing.JComboBox LocationComboBox;
    private javax.swing.JComboBox<String> Organ;
    private javax.swing.JTable PatientworkRequestJTable;
    private javax.swing.JTextField Severity;
    private javax.swing.JButton SubmitRequest;
    private javax.swing.JComboBox TCCombobox;
    private javax.swing.JTextField TreatmentDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
